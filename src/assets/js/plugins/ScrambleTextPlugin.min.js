/*!
 * VERSION: 0.4.0
 * DATE: 2016-11-29
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.
 * ScrambleTextPlugin is a Club GreenSock membership benefit; You must have a valid membership to use
 * this code without violating the terms of use. Visit http://greensock.com/club/ to sign up or get more details.
 * This work is subject to the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 */
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function () {
    "use strict";
    var t = function (e) {
            var i = e.nodeType,
                n = "";
            if (1 === i || 9 === i || 11 === i) {
                if ("string" == typeof e.textContent) return e.textContent;
                for (e = e.firstChild; e; e = e.nextSibling) n += t(e)
            } else if (3 === i || 4 === i) return e.nodeValue;
            return n
        },
        e = function (t, e) {
            for (var i = e.length, n = ""; --t > -1;) n += e[Math.random() * i | 0];
            return n
        },
        i = function (t) {
            this.chars = t.split(""), this.sets = [], this.length = 50;
            var i;
            for (i = 0; 20 > i; i++) this.sets[i] = e(80, this.chars);
            this.grow = function (t) {
                for (i = 0; 20 > i; i++) this.sets[i] += e(t - this.length, this.chars);
                this.length = t
            }
        },
        n = "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
        r = n.toLowerCase(),
        s = {
            upperCase: new i(n),
            lowerCase: new i(r),
            upperAndLowerCase: new i(n + r)
        },
        o = "codepen",
        a = "ScrambleTextPlugin",
        h = String.fromCharCode(103, 114, 101, 101, 110, 115, 111, 99, 107, 46, 99, 111, 109),
        l = String.fromCharCode(47, 114, 101, 113, 117, 105, 114, 101, 115, 45, 109, 101, 109, 98, 101, 114, 115, 104, 105, 112, 47),
        c = function (t) {
            for (var e = -1 !== (window ? window.location.href : "").indexOf(String.fromCharCode(103, 114, 101, 101, 110, 115, 111, 99, 107)) && -1 !== t.indexOf(String.fromCharCode(108, 111, 99, 97, 108, 104, 111, 115, 116)), i = [h, String.fromCharCode(99, 111, 100, 101, 112, 101, 110, 46, 105, 111), String.fromCharCode(99, 111, 100, 101, 112, 101, 110, 46, 100, 101, 118), String.fromCharCode(99, 115, 115, 45, 116, 114, 105, 99, 107, 115, 46, 99, 111, 109), String.fromCharCode(99, 100, 112, 110, 46, 105, 111), String.fromCharCode(103, 97, 110, 110, 111, 110, 46, 116, 118), String.fromCharCode(99, 111, 100, 101, 99, 97, 110, 121, 111, 110, 46, 110, 101, 116), String.fromCharCode(116, 104, 101, 109, 101, 102, 111, 114, 101, 115, 116, 46, 110, 101, 116), String.fromCharCode(99, 101, 114, 101, 98, 114, 97, 120, 46, 99, 111, 46, 117, 107), String.fromCharCode(116, 121, 109, 112, 97, 110, 117, 115, 46, 110, 101, 116), String.fromCharCode(116, 119, 101, 101, 110, 109, 97, 120, 46, 99, 111, 109), String.fromCharCode(116, 119, 101, 101, 110, 108, 105, 116, 101, 46, 99, 111, 109), String.fromCharCode(112, 108, 110, 107, 114, 46, 99, 111), String.fromCharCode(104, 111, 116, 106, 97, 114, 46, 99, 111, 109), String.fromCharCode(119, 101, 98, 112, 97, 99, 107, 98, 105, 110, 46, 99, 111, 109), String.fromCharCode(97, 114, 99, 104, 105, 118, 101, 46, 111, 114, 103), String.fromCharCode(106, 115, 102, 105, 100, 100, 108, 101, 46, 110, 101, 116)], n = i.length; --n > -1;)
                if (-1 !== t.indexOf(i[n])) return !0;
            return e && window && window.console && console.log(String.fromCharCode(87, 65, 82, 78, 73, 78, 71, 58, 32, 97, 32, 115, 112, 101, 99, 105, 97, 108, 32, 118, 101, 114, 115, 105, 111, 110, 32, 111, 102, 32) + a + String.fromCharCode(32, 105, 115, 32, 114, 117, 110, 110, 105, 110, 103, 32, 108, 111, 99, 97, 108, 108, 121, 44, 32, 98, 117, 116, 32, 105, 116, 32, 119, 105, 108, 108, 32, 110, 111, 116, 32, 119, 111, 114, 107, 32, 111, 110, 32, 97, 32, 108, 105, 118, 101, 32, 100, 111, 109, 97, 105, 110, 32, 98, 101, 99, 97, 117, 115, 101, 32, 105, 116, 32, 105, 115, 32, 97, 32, 109, 101, 109, 98, 101, 114, 115, 104, 105, 112, 32, 98, 101, 110, 101, 102, 105, 116, 32, 111, 102, 32, 67, 108, 117, 98, 32, 71, 114, 101, 101, 110, 83, 111, 99, 107, 46, 32, 80, 108, 101, 97, 115, 101, 32, 115, 105, 103, 110, 32, 117, 112, 32, 97, 116, 32, 104, 116, 116, 112, 58, 47, 47, 103, 114, 101, 101, 110, 115, 111, 99, 107, 46, 99, 111, 109, 47, 99, 108, 117, 98, 47, 32, 97, 110, 100, 32, 116, 104, 101, 110, 32, 100, 111, 119, 110, 108, 111, 97, 100, 32, 116, 104, 101, 32, 39, 114, 101, 97, 108, 39, 32, 118, 101, 114, 115, 105, 111, 110, 32, 102, 114, 111, 109, 32, 121, 111, 117, 114, 32, 71, 114, 101, 101, 110, 83, 111, 99, 107, 32, 97, 99, 99, 111, 117, 110, 116, 32, 119, 104, 105, 99, 104, 32, 104, 97, 115, 32, 110, 111, 32, 115, 117, 99, 104, 32, 108, 105, 109, 105, 116, 97, 116, 105, 111, 110, 115, 46, 32, 84, 104, 101, 32, 102, 105, 108, 101, 32, 121, 111, 117, 39, 114, 101, 32, 117, 115, 105, 110, 103, 32, 119, 97, 115, 32, 108, 105, 107, 101, 108, 121, 32, 100, 111, 119, 110, 108, 111, 97, 100, 101, 100, 32, 102, 114, 111, 109, 32, 101, 108, 115, 101, 119, 104, 101, 114, 101, 32, 111, 110, 32, 116, 104, 101, 32, 119, 101, 98, 32, 97, 110, 100, 32, 105, 115, 32, 114, 101, 115, 116, 114, 105, 99, 116, 101, 100, 32, 116, 111, 32, 108, 111, 99, 97, 108, 32, 117, 115, 101, 32, 111, 114, 32, 111, 110, 32, 115, 105, 116, 101, 115, 32, 108, 105, 107, 101, 32, 99, 111, 100, 101, 112, 101, 110, 46, 105, 111, 46)), e
        }("https://codepen.io"),
        d = _gsScope._gsDefine.plugin({
            propName: "scrambleText",
            version: "0.4.0",
            API: 2,
            overwriteProps: ["scrambleText", "text"],
            init: function (e, n, r, d) {
                if (this._prop = "innerHTML" in e ? "innerHTML" : "textContent" in e ? "textContent" : 0, !this._prop) return !1;
                if (!c) return window.location.href = "http://" + h + l + "?plugin=" + a + "&source=" + o, !1;
                "function" == typeof n && (n = n(d, e)), this._target = e, "object" != typeof n && (n = {
                    text: n
                });
                var g, f, u, p;
                return this._delimiter = g = n.delimiter || "", this._original = t(e).replace(/\s+/g, " ").split("&nbsp;").join("").split(g), this._text = (n.text || n.value || "").replace(/\s+/g, " ").split(g), this._hasClass = !1, "string" == typeof n.newClass && (this._newClass = n.newClass, this._hasClass = !0), "string" == typeof n.oldClass && (this._oldClass = n.oldClass, this._hasClass = !0), f = this._text.length - this._original.length, this._length = this._original.join(g).length, this._lengthDif = this._text.join(g).length - this._length, this._fillChar = n.fillChar || n.chars && -1 !== n.chars.indexOf(" ") ? "&nbsp;" : "", this._charSet = p = s[n.chars || "upperCase"] || new i(n.chars), this._speed = .016 / (n.speed || 1), this._prevScrambleTime = 0, this._setIndex = 20 * Math.random() | 0, u = this._length + Math.max(this._lengthDif, 0), u > p.length && p.grow(u), this._chars = p.sets[this._setIndex], this._revealDelay = n.revealDelay || 0, this._tweenLength = n.tweenLength !== !1, this._tween = r, this._rightToLeft = !!n.rightToLeft, c
            },
            set: function (t) {
                var e, i, n, r, s, o, a, h, l = this._text.length,
                    c = this._delimiter,
                    d = this._tween._time,
                    g = d - this._prevScrambleTime;
                this._revealDelay && (this._tween.vars.runBackwards && (d = this._tween._duration - d), t = 0 === d ? 0 : d < this._revealDelay ? 1e-6 : d === this._tween._duration ? 1 : this._tween._ease.getRatio((d - this._revealDelay) / (this._tween._duration - this._revealDelay))), 0 > t ? t = 0 : t > 1 && (t = 1), this._rightToLeft && (t = 1 - t), e = t * l + .5 | 0, t ? ((g > this._speed || g < -this._speed) && (this._setIndex = (this._setIndex + (19 * Math.random() | 0)) % 20, this._chars = this._charSet.sets[this._setIndex], this._prevScrambleTime += g), n = this._chars) : n = this._original.join(c), this._rightToLeft ? 1 !== t || !this._tween.vars.runBackwards && "isFromStart" !== this._tween.data ? (i = n.substr(0, this._length + (this._tweenLength ? 1 - t * t * t : 1) * this._lengthDif - (l - e) + .5 | 0), n = this._text.slice(e).join(c)) : (i = "", n = this._original.join(c)) : (i = this._text.slice(0, e).join(c), n = n.substr(e, this._length + (this._tweenLength ? 1 - (t = 1 - t) * t * t * t : 1) * this._lengthDif - e + .5 | 0)), this._hasClass ? (a = this._rightToLeft ? this._oldClass : this._newClass, h = this._rightToLeft ? this._newClass : this._oldClass, r = a && 0 !== e, s = h && e !== l, o = (r ? "<span class='" + a + "'>" : "") + i + (r ? "</span>" : "") + (s ? "<span class='" + h + "'>" : "") + c + n + (s ? "</span>" : "")) : o = i + c + n, this._target[this._prop] = "&nbsp;" === this._fillChar && -1 !== o.indexOf("  ") ? o.split("  ").join("&nbsp;&nbsp;") : o
            }
        }),
        g = d.prototype;
    g._newClass = g._oldClass = "";
    for (g in s) s[g.toLowerCase()] = s[g], s[g.toUpperCase()] = s[g]
}), _gsScope._gsDefine && _gsScope._gsQueue.pop()();